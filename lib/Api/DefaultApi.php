<?php
/**
 * DefaultApi
 * PHP version 5
 *
 * @category Class
 * @package  octalmage\WPUnitTestApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * WP Unit Test API.
 *
 * #### An API to collect unit test results.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace octalmage\WPUnitTestApi\Api;

use \octalmage\WPUnitTestApi\ApiClient;
use \octalmage\WPUnitTestApi\ApiException;
use \octalmage\WPUnitTestApi\Configuration;
use \octalmage\WPUnitTestApi\ObjectSerializer;

/**
 * DefaultApi Class Doc Comment
 *
 * @category Class
 * @package  octalmage\WPUnitTestApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DefaultApi
{
    /**
     * API Client
     *
     * @var \octalmage\WPUnitTestApi\ApiClient instance of the ApiClient
     */
    protected $apiClient;

    /**
     * Constructor
     *
     * @param \octalmage\WPUnitTestApi\ApiClient|null $apiClient The api client to use
     */
    public function __construct(\octalmage\WPUnitTestApi\ApiClient $apiClient = null)
    {
        if ($apiClient === null) {
            $apiClient = new ApiClient();
        }

        $this->apiClient = $apiClient;
    }

    /**
     * Get API client
     *
     * @return \octalmage\WPUnitTestApi\ApiClient get the API client
     */
    public function getApiClient()
    {
        return $this->apiClient;
    }

    /**
     * Set the API client
     *
     * @param \octalmage\WPUnitTestApi\ApiClient $apiClient set the API client
     *
     * @return DefaultApi
     */
    public function setApiClient(\octalmage\WPUnitTestApi\ApiClient $apiClient)
    {
        $this->apiClient = $apiClient;
        return $this;
    }

    /**
     * Operation addResults
     *
     * @param \octalmage\WPUnitTestApi\Model\NewResult $results Results to submit. (required)
     * @throws \octalmage\WPUnitTestApi\ApiException on non-2xx response
     * @return \octalmage\WPUnitTestApi\Model\Response
     */
    public function addResults($results)
    {
        list($response) = $this->addResultsWithHttpInfo($results);
        return $response;
    }

    /**
     * Operation addResultsWithHttpInfo
     *
     * @param \octalmage\WPUnitTestApi\Model\NewResult $results Results to submit. (required)
     * @throws \octalmage\WPUnitTestApi\ApiException on non-2xx response
     * @return array of \octalmage\WPUnitTestApi\Model\Response, HTTP status code, HTTP response headers (array of strings)
     */
    public function addResultsWithHttpInfo($results)
    {
        // verify the required parameter 'results' is set
        if ($results === null) {
            throw new \InvalidArgumentException('Missing the required parameter $results when calling addResults');
        }
        // parse inputs
        $resourcePath = "/results";
        $httpBody = '';
        $queryParams = [];
        $headerParams = [];
        $formParams = [];
        $_header_accept = $this->apiClient->selectHeaderAccept(['application/json']);
        if (!is_null($_header_accept)) {
            $headerParams['Accept'] = $_header_accept;
        }
        $headerParams['Content-Type'] = $this->apiClient->selectHeaderContentType([]);

        // body params
        $_tempBody = null;
        if (isset($results)) {
            $_tempBody = $results;
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            $httpBody = $_tempBody; // $_tempBody is the method argument, if present
        } elseif (count($formParams) > 0) {
            $httpBody = $formParams; // for HTTP post (form)
        }
        // make the API Call
        try {
            list($response, $statusCode, $httpHeader) = $this->apiClient->callApi(
                $resourcePath,
                'POST',
                $queryParams,
                $httpBody,
                $headerParams,
                '\octalmage\WPUnitTestApi\Model\Response',
                '/results'
            );

            return [$this->apiClient->getSerializer()->deserialize($response, '\octalmage\WPUnitTestApi\Model\Response', $httpHeader), $statusCode, $httpHeader];
        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(), '\octalmage\WPUnitTestApi\Model\Response', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
                case 400:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(), '\octalmage\WPUnitTestApi\Model\Error', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(), '\octalmage\WPUnitTestApi\Model\Error', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
            }

            throw $e;
        }
    }
}
